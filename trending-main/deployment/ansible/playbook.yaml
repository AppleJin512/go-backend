- name: System prepare
  hosts: all
  become: true
  tasks:
    # apt update && apt upgrade
    - name: Upgrade apt
      ansible.builtin.apt:
        update_cache: true
        upgrade: yes

    # apt update && apt safe-upgrade && apt install -y ...
    - name: Install apt
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
          - git
          - gnupg
          - lsb-release
          - net-tools
          - python3-docker
          - traceroute
          - vim
          - zsh
        state: present
    # Optimize sysctl https://www.orangesputnik.eu/ubuntu-server-optimization/
    - name: update sysctl param
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - name: 'net.ipv4.conf.all.accept_redirects'
          value: '0'
        - name: 'net.ipv4.conf.all.secure_redirects'
          value: '0'
        - name: 'net.ipv4.conf.all.send_redirects'
          value: '0'
        - name: 'net.ipv4.tcp_max_orphans'
          value: '65536'
        - name: 'net.ipv4.tcp_fin_timeout'
          value: '10'
        - name: 'net.ipv4.tcp_keepalive_time'
          value: '1800'
        - name: 'net.ipv4.tcp_keepalive_intvl'
          value: '15'
        - name: 'net.ipv4.tcp_keepalive_probes'
          value: '5'
        - name: 'net.ipv4.tcp_max_syn_backlog'
          value: '4096'
        - name: 'net.ipv4.tcp_synack_retries'
          value: '1'
        - name: 'net.ipv4.tcp_mem'
          value: '50576 64768 98152'
        - name: 'net.ipv4.tcp_rmem'
          value: '4096 87380 16777216'
        - name: 'net.ipv4.tcp_wmem'
          value: '4096 65536 16777216'
        - name: 'net.ipv4.tcp_orphan_retries'
          value: '0'
        - name: 'net.ipv4.tcp_syncookies'
          value: '0'
  #      - name: 'net.nf_conntrack_max'
  #        value: '16777216'
        - name: 'net.ipv4.tcp_timestamps'
          value: '1'
        - name: 'net.ipv4.tcp_sack'
          value: '1'
        - name: 'net.ipv4.tcp_congestion_control '
          value: 'htcp'
        - name: 'net.ipv4.tcp_no_metrics_save'
          value: '1'
  #      - name: 'net.ipv4.route.flush'
  #        value: '1'
        - name: 'net.ipv4.conf.all.rp_filter'
          value: '1'
        - name: 'net.ipv4.conf.default.rp_filter'
          value: '1'
        - name: 'net.ipv4.conf.all.accept_source_route'
          value: '0'
        - name: 'net.ipv4.conf.default.accept_source_route'
          value: '0'
        - name: 'net.ipv4.ip_local_port_range'
          value: '1024 65535'
        - name: 'net.ipv4.tcp_tw_reuse'
          value: '1'
        - name: 'net.ipv4.tcp_window_scaling'
          value: '1'
        - name: 'net.ipv4.tcp_rfc1337'
          value: '1'
  #      - name: 'net.ipv4.ip_forward'
  #        value: '0'
        - name: 'net.ipv4.icmp_echo_ignore_broadcasts'
          value: '1'
        - name: 'net.ipv4.icmp_echo_ignore_all'
          value: '1'
        - name: 'net.ipv4.icmp_ignore_bogus_error_responses'
          value: '1'
        - name: 'net.core.somaxconn'
          value: '65535'
        - name: 'net.core.netdev_max_backlog'
          value: '1000'
        - name: 'net.core.rmem_default'
          value: '65536'
        - name: 'net.core.wmem_default'
          value: '65536'
        - name: 'net.core.rmem_max'
          value: '16777216'
        - name: 'net.core.wmem_max'
          value: '16777216'

# https://docs.docker.com/engine/install/ubuntu/
- name: Install Docker
  hosts: all
  become: true
  tasks:
    # mkdir /etc/apt/keyrings
    # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    - name: Check docker.gpg exists
      ansible.builtin.stat:
        path: /etc/apt/keyrings/docker.gpg
      register: docker_gpg
    - name: Download docker.gpg
      ansible.builtin.shell: |
        mkdir /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      when: not docker_gpg.stat.exists
    # apt update && apt apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    - name: Install apt
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: true
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    - name: Ensure user in docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: yes
    # Install compose switch v1 to v2 https://github.com/docker/compose-switch
    - name: Install compose switch
      ansible.builtin.get_url:
        url: https://github.com/docker/compose-switch/releases/latest/download/docker-compose-linux-amd64
        dest: /usr/local/bin/docker-compose
        mode: '0755'
